[
    {
        "id": "127f91a36a000fb6",
        "type": "mqtt in",
        "z": "6cdc3f3d.d9bdd8",
        "name": "",
        "topic": "P-ESP-GATE",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a514943117bbaccb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 260,
        "wires": [
            [
                "77ca0b188c80d532"
            ]
        ]
    },
    {
        "id": "77ca0b188c80d532",
        "type": "debug",
        "z": "6cdc3f3d.d9bdd8",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 260,
        "wires": []
    },
    {
        "id": "c899a97b4891f9eb",
        "type": "mqtt out",
        "z": "6cdc3f3d.d9bdd8",
        "name": "",
        "topic": "S-ESP-GATE",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a514943117bbaccb",
        "x": 320,
        "y": 100,
        "wires": []
    },
    {
        "id": "398c53811f3c23b7",
        "type": "inject",
        "z": "6cdc3f3d.d9bdd8",
        "name": "100",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "threshold;100",
        "payloadType": "str",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "c899a97b4891f9eb"
            ]
        ]
    },
    {
        "id": "b6c0605fa61e590a",
        "type": "mqtt in",
        "z": "6cdc3f3d.d9bdd8",
        "name": "",
        "topic": "P-ESP-HOME",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a514943117bbaccb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 820,
        "wires": [
            [
                "8f7325ac48530b63"
            ]
        ]
    },
    {
        "id": "8f7325ac48530b63",
        "type": "debug",
        "z": "6cdc3f3d.d9bdd8",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 820,
        "wires": []
    },
    {
        "id": "4ed45d0d6b10ef26",
        "type": "inject",
        "z": "6cdc3f3d.d9bdd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "open",
        "payloadType": "str",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "c899a97b4891f9eb"
            ]
        ]
    },
    {
        "id": "489a32e753f00da1",
        "type": "inject",
        "z": "6cdc3f3d.d9bdd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "close",
        "payloadType": "str",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "c899a97b4891f9eb"
            ]
        ]
    },
    {
        "id": "9c77adcdf3729b2d",
        "type": "inject",
        "z": "6cdc3f3d.d9bdd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "wrong",
        "payloadType": "str",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "c899a97b4891f9eb"
            ]
        ]
    },
    {
        "id": "be979e074a6a328a",
        "type": "mqtt in",
        "z": "6cdc3f3d.d9bdd8",
        "name": "",
        "topic": "P-ID-ESP-GATE",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a514943117bbaccb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 320,
        "wires": [
            [
                "0237fb57c9eff1f0",
                "9fd6de9c5dd184cc"
            ]
        ]
    },
    {
        "id": "bc6131d50dadec21",
        "type": "debug",
        "z": "6cdc3f3d.d9bdd8",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 260,
        "wires": []
    },
    {
        "id": "0237fb57c9eff1f0",
        "type": "function",
        "z": "6cdc3f3d.d9bdd8",
        "name": "trim String",
        "func": "msg.ID = msg.payload.trim();\n\n\n// send close after open\nvar msg1 = {}\nmsg1.payload = \"close\";\nreturn [msg,msg1];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 320,
        "wires": [
            [
                "bc6131d50dadec21",
                "1e9132ef1b90a3be",
                "38cc145ffc011a8f"
            ],
            [
                "d0278b97d6252606"
            ]
        ]
    },
    {
        "id": "1e9132ef1b90a3be",
        "type": "function",
        "z": "6cdc3f3d.d9bdd8",
        "name": "filter ID",
        "func": "var arrID = global.get(\"gl_arr_id\") || [];\nvar currentID = msg.ID;\nvar isOpen = false;\nisOpen = arrID.filter( item => item.id == currentID);\n\nif (isOpen)\n{\n    msg.payload = \"open\";\n    return msg;\n}\nmsg.payload = \"wrong\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 300,
        "wires": [
            [
                "b9d2e2d445b70487",
                "488305a01ca4a5e9"
            ]
        ]
    },
    {
        "id": "cc36f93cd1ed28bd",
        "type": "function",
        "z": "6cdc3f3d.d9bdd8",
        "name": "list ID",
        "func": "var arrID =[\n    {\n        \"name\": \"Thanh\",\n        \"id\":\"154 114 118 128\",\n    },\n]\n\nglobal.set(\"gl_arr_ID\", arrID);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "cbb2758429369175",
        "type": "inject",
        "z": "6cdc3f3d.d9bdd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"chipID\":\"ESP-D8A27D93\",\"red_led\":0,\"green_led\":0,\"hum\":65,\"temp\":29.5,\"now\":\"952496\"}",
        "payloadType": "json",
        "x": 990,
        "y": 140,
        "wires": [
            [
                "cc36f93cd1ed28bd"
            ]
        ]
    },
    {
        "id": "b9d2e2d445b70487",
        "type": "mqtt out",
        "z": "6cdc3f3d.d9bdd8",
        "name": "",
        "topic": "S-ESP-GATE",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a514943117bbaccb",
        "x": 680,
        "y": 280,
        "wires": []
    },
    {
        "id": "d0278b97d6252606",
        "type": "delay",
        "z": "6cdc3f3d.d9bdd8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 340,
        "wires": [
            [
                "b9d2e2d445b70487",
                "488305a01ca4a5e9"
            ]
        ]
    },
    {
        "id": "488305a01ca4a5e9",
        "type": "debug",
        "z": "6cdc3f3d.d9bdd8",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 340,
        "wires": []
    },
    {
        "id": "28c99090b824c5d4",
        "type": "comment",
        "z": "6cdc3f3d.d9bdd8",
        "name": "GATE",
        "info": "",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "4050e271efcc3a1a",
        "type": "comment",
        "z": "6cdc3f3d.d9bdd8",
        "name": "HOME",
        "info": "",
        "x": 130,
        "y": 760,
        "wires": []
    },
    {
        "id": "38cc145ffc011a8f",
        "type": "function",
        "z": "6cdc3f3d.d9bdd8",
        "name": "check & push",
        "func": "var date = new Date();\nvar hour = date.getHours();\nvar minute = date.getMinutes();\nvar timestamp = date.getTime();\nif (hour < 10) hour = \"0\" + hour;\nif (minute < 10) minute = \"0\" + minute;\nmsg.hour = hour;\nmsg.minute = minute;\nvar timeString = hour + \":\" + minute;\nvar statusString = timeString + \" • \";\nnode.status({ fill: \"blue\", shape: \"dot\", text: statusString });\n////////////\nvar arrLogin = global.get(\"gl_arr_login\") || [];\nvar arrID = global.get(\"gl_arr_ID\") || [];\n\n//check has id \nvar checkName = \"new ID\";\narrID.forEach(item=>{\n    if (item.id == msg.ID) \n    {\n        checkName = item.name;\n    }\n})\nmsg.checkName = checkName;\n\n//push\narrLogin.push({\n    \"time\": date,\n    \"name\": checkName != \"new ID\" ? checkName : \"new ID\",\n    \"id\": msg.ID,\n})\n\nglobal.set(\"gl_arr_login\",arrLogin);\n\n\nstatusString += `push: ${msg.ID} (${checkName})`\nnode.status({ fill: \"blue\", shape: \"dot\", text: statusString });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "06a24cc208454ded",
        "type": "ui_table",
        "z": "6cdc3f3d.d9bdd8",
        "group": "ed26ce0b24e0b720",
        "name": "LIST ID",
        "order": 4,
        "width": 14,
        "height": 4,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1260,
        "y": 180,
        "wires": []
    },
    {
        "id": "d12e4ed852c31ebc",
        "type": "function",
        "z": "6cdc3f3d.d9bdd8",
        "name": "filter ID",
        "func": "var arrID = global.get(\"gl_arr_ID\") || [];\n\nmsg.payload = arrID;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 180,
        "wires": [
            [
                "06a24cc208454ded"
            ]
        ]
    },
    {
        "id": "c017b83da1727b36",
        "type": "inject",
        "z": "6cdc3f3d.d9bdd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 990,
        "y": 180,
        "wires": [
            [
                "d12e4ed852c31ebc"
            ]
        ]
    },
    {
        "id": "f5d9513bf8fd7017",
        "type": "comment",
        "z": "6cdc3f3d.d9bdd8",
        "name": "ID can open door",
        "info": "",
        "x": 1280,
        "y": 220,
        "wires": []
    },
    {
        "id": "3504a3a437fcd110",
        "type": "comment",
        "z": "6cdc3f3d.d9bdd8",
        "name": "history ID login",
        "info": "",
        "x": 420,
        "y": 420,
        "wires": []
    },
    {
        "id": "d6f1563c5d70f1a0",
        "type": "function",
        "z": "6cdc3f3d.d9bdd8",
        "name": "list ID",
        "func": "var arrLogin =[\n    {\n        \"time\": \"\",\n        \"name\": \"Thanh\",\n        \"id\":\"154 114 118 128\",\n    },\n]\n\nglobal.set(\"gl_arr_login\", arrLogin);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "b2f7a474c5d2dcd1",
        "type": "inject",
        "z": "6cdc3f3d.d9bdd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"chipID\":\"ESP-D8A27D93\",\"red_led\":0,\"green_led\":0,\"hum\":65,\"temp\":29.5,\"now\":\"952496\"}",
        "payloadType": "json",
        "x": 490,
        "y": 140,
        "wires": [
            [
                "d6f1563c5d70f1a0"
            ]
        ]
    },
    {
        "id": "f5e78fa355946cd8",
        "type": "inject",
        "z": "6cdc3f3d.d9bdd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "154 114 118 125",
        "payloadType": "str",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "0237fb57c9eff1f0",
                "9fd6de9c5dd184cc"
            ]
        ]
    },
    {
        "id": "484e96f606e7e40d",
        "type": "ui_table",
        "z": "6cdc3f3d.d9bdd8",
        "group": "ed26ce0b24e0b720",
        "name": "ID LOGIN",
        "order": 4,
        "width": 14,
        "height": 4,
        "columns": [],
        "outputs": 1,
        "cts": true,
        "x": 440,
        "y": 380,
        "wires": [
            [
                "ce0beed12eeddf6e"
            ]
        ]
    },
    {
        "id": "9fd6de9c5dd184cc",
        "type": "function",
        "z": "6cdc3f3d.d9bdd8",
        "name": "show",
        "func": "\n////////////\nvar arrLogin = global.get(\"gl_arr_login\") || [];\nmsg.payload = arrLogin;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 380,
        "wires": [
            [
                "484e96f606e7e40d"
            ]
        ]
    },
    {
        "id": "ce0beed12eeddf6e",
        "type": "function",
        "z": "6cdc3f3d.d9bdd8",
        "name": "get id",
        "func": "var date = new Date();\nvar hour = date.getHours();\nvar minute = date.getMinutes();\nvar timestamp = date.getTime();\nif (hour < 10) hour = \"0\" + hour;\nif (minute < 10) minute = \"0\" + minute;\nmsg.hour = hour;\nmsg.minute = minute;\nvar timeString = hour + \":\" + minute;\nvar statusString = timeString + \" • \";\nnode.status({ fill: \"blue\", shape: \"dot\", text: statusString });\n//=============================================================\n\nvar selected = flow.get('fl_selected')||{}\nvar dataSelected = msg.payload;\n\n\nmsg.nameSelected = dataSelected.name;\nmsg.idSelected = dataSelected.id;\n\nselected.nameSelected = msg.nameSelected\nselected.idSelected = msg.idSelected\nflow.set('fl_selected',selected);\n\nstatusString += `${msg.idSelected} (${msg.nameSelected})`\nnode.status({ fill: \"blue\", shape: \"dot\", text: statusString });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 380,
        "wires": [
            [
                "7f8055c9104ee51e"
            ]
        ]
    },
    {
        "id": "7be2d3b3d70a02cd",
        "type": "function",
        "z": "6cdc3f3d.d9bdd8",
        "name": "set name",
        "func": "var date = new Date();\nvar hour = date.getHours();\nvar minute = date.getMinutes();\nvar timestamp = date.getTime();\nif (hour < 10) hour = \"0\" + hour;\nif (minute < 10) minute = \"0\" + minute;\nmsg.hour = hour;\nmsg.minute = minute;\nvar timeString = hour + \":\" + minute;\nvar statusString = timeString + \" • \";\nnode.status({ fill: \"blue\", shape: \"dot\", text: statusString });\n//=============================================================\nvar selected = flow.get('fl_selected')||{}\n\n//set name\nvar name = msg.payload;\nselected.name = name;\n\nflow.set('fl_selected',selected);\n\nstatusString += name;\nnode.status({ fill: \"blue\", shape: \"dot\", text: statusString });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "7f8055c9104ee51e",
        "type": "ui_text",
        "z": "6cdc3f3d.d9bdd8",
        "group": "ed26ce0b24e0b720",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ID đang chọn: ",
        "format": "{{msg.idSelected}}",
        "layout": "row-center",
        "className": "",
        "x": 720,
        "y": 380,
        "wires": []
    },
    {
        "id": "b6b8fee26439374f",
        "type": "comment",
        "z": "6cdc3f3d.d9bdd8",
        "name": "need pass and ms send ",
        "info": "",
        "x": 400,
        "y": 560,
        "wires": []
    },
    {
        "id": "99d171a0adaa66e0",
        "type": "ui_text_input",
        "z": "6cdc3f3d.d9bdd8",
        "name": "",
        "label": "nhập tên:",
        "tooltip": "",
        "group": "ed26ce0b24e0b720",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 580,
        "y": 440,
        "wires": [
            [
                "7be2d3b3d70a02cd"
            ]
        ]
    },
    {
        "id": "66a0eb2d155251ba",
        "type": "inject",
        "z": "6cdc3f3d.d9bdd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "fl_selected",
        "payloadType": "flow",
        "x": 620,
        "y": 620,
        "wires": [
            [
                "27430bbaacc09f28"
            ]
        ]
    },
    {
        "id": "27430bbaacc09f28",
        "type": "debug",
        "z": "6cdc3f3d.d9bdd8",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 620,
        "wires": []
    },
    {
        "id": "9ceea500e1904fa8",
        "type": "ui_button",
        "z": "6cdc3f3d.d9bdd8",
        "name": "",
        "group": "ed26ce0b24e0b720",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Set ID",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 570,
        "y": 560,
        "wires": [
            [
                "25ebe7039a3c62cc"
            ]
        ]
    },
    {
        "id": "25ebe7039a3c62cc",
        "type": "function",
        "z": "6cdc3f3d.d9bdd8",
        "name": "set name",
        "func": "var date = new Date();\nvar hour = date.getHours();\nvar minute = date.getMinutes();\nvar timestamp = date.getTime();\nif (hour < 10) hour = \"0\" + hour;\nif (minute < 10) minute = \"0\" + minute;\nmsg.hour = hour;\nmsg.minute = minute;\nvar timeString = hour + \":\" + minute;\nvar statusString = timeString + \" • \";\nnode.status({ fill: \"blue\", shape: \"dot\", text: statusString });\n//=============================================================\nvar selected = flow.get('fl_selected') || {}\nvar arrID = global.get(\"gl_arr_ID\") || [];\n\n//check pass\nif (!selected.pass)\n{\n    statusString = `wrong pass!!`\n    node.status({ fill: \"red\", shape: \"dot\", text: statusString });\n    msg.payload = \"wrong pass !!!\";\n    return msg;\n}\n\n//check id\nvar nameChecked = \"\";\nvar idChecked = \"\";\narrID.forEach(item=>{\n    if (item.id == selected.idSelected) \n    {\n        nameChecked = item.name;\n        idChecked = item.id;\n    }\n})\n\n// has't data, push to arrID\nif (!nameChecked || !idChecked )\n{\n    arrID.push({\n        \"name\": selected.name,\n        \"id\": selected.idSelected,\n    })\n    statusString = `push to ArrID with ${selected.idSelected}(${selected.name})`\n    node.status({ fill: \"blue\", shape: \"dot\", text: statusString });\n    msg.payload = `add success with name: ${selected.name}!`;\n    return msg;\n}\n\n// has data, only change name\narrID.forEach(item=>{\n    if (item.id == selected.idSelected) \n    {\n        item.name = selected.name\n    }\n})\nstatusString = `change name ${selected.idSelected}(${selected.name})`\nnode.status({ fill: \"blue\", shape: \"dot\", text: statusString });\nmsg.payload = `change success with name: ${selected.name}!`;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 560,
        "wires": [
            [
                "d5705cfd53481fb5"
            ]
        ]
    },
    {
        "id": "b7b28168863dccf9",
        "type": "ui_text_input",
        "z": "6cdc3f3d.d9bdd8",
        "name": "",
        "label": "nhập pass:",
        "tooltip": "",
        "group": "ed26ce0b24e0b720",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "password",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 590,
        "y": 500,
        "wires": [
            [
                "049f9428cb6e5025"
            ]
        ]
    },
    {
        "id": "049f9428cb6e5025",
        "type": "function",
        "z": "6cdc3f3d.d9bdd8",
        "name": "check pass",
        "func": "var date = new Date();\nvar hour = date.getHours();\nvar minute = date.getMinutes();\nvar timestamp = date.getTime();\nif (hour < 10) hour = \"0\" + hour;\nif (minute < 10) minute = \"0\" + minute;\nmsg.hour = hour;\nmsg.minute = minute;\nvar timeString = hour + \":\" + minute;\nvar statusString = timeString + \" • \";\nnode.status({ fill: \"blue\", shape: \"dot\", text: statusString });\n//=============================================================\nvar selected = flow.get('fl_selected')||{}\nvar PASS = global.get('gl_pass') || null\nvar pass = msg.payload;\n\n\nif (pass != PASS)\n{\n    statusString = \"wrong pass\";\n    node.status({ fill: \"red\", shape: \"dot\", text: statusString });\n    selected.pass = false;\n    flow.set('fl_selected',selected);\n    return;\n}\n\nselected.pass = true;\nflow.set('fl_selected',selected);\n\nstatusString = \"oke\";\nnode.status({ fill: \"blue\", shape: \"dot\", text: statusString });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "c234f09c6edf38fb",
        "type": "function",
        "z": "6cdc3f3d.d9bdd8",
        "name": "list ID",
        "func": "var pass = msg.payload;\n\nglobal.set(\"gl_pass\", pass);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "1ed6fe2dd52083b7",
        "type": "inject",
        "z": "6cdc3f3d.d9bdd8",
        "name": "PASS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "pass1234",
        "payloadType": "str",
        "x": 590,
        "y": 660,
        "wires": [
            [
                "c234f09c6edf38fb"
            ]
        ]
    },
    {
        "id": "d5705cfd53481fb5",
        "type": "ui_toast",
        "z": "6cdc3f3d.d9bdd8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Notion",
        "name": "",
        "x": 870,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "a514943117bbaccb",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ed26ce0b24e0b720",
        "type": "ui_group",
        "name": "SmartHome",
        "tab": "829a6eb75df8caba",
        "order": 1,
        "disp": true,
        "width": 30,
        "collapse": false,
        "className": ""
    },
    {
        "id": "829a6eb75df8caba",
        "type": "ui_tab",
        "name": "showInfor",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]